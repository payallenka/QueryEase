def hig():
     f=open("C:\\Users\\PAYAL-PIU\\AppData\\Local\\Programs\\Python\\Python39\\pyql\\details_.txt","r")
     a=f.readline()
     b=f.readline()
     gh=f.readline()
     f.close()
     import mysql.connector as c
     con=c.connect(host=a,user=b,password=gh)
     cur=con.cursor()
     try:
          cur.execute("show databases")
          fg = cur.fetchall()
          print(" ")
          for ui in fg:
               print(ui)
          print(" ")
          b=input("enter database for acessing the table ")
          bc="use {}".format(b)
          cur.execute(bc)
          print(" ")
          cur.execute("show tables;")
          print(" ")
          print("displaying existing tables")
          print(" ")
          qr=cur.fetchall()
          print(" ")
          for kl in qr:
               print(kl)
          print(" ")
          cv = input("enter table name ")
          ti = "select * from {}".format(cv)
          cur.execute(ti)
          sf = cur.fetchall()
          print(" ")
          print("displaying existing values")
          print(" ")
          for i in sf:
               print(i)
          print(" ")
          print("displaying description of table ")
          print(" ")
          hu = "desc {}".format(cv)
          cur.execute(hu)
          ku = cur.fetchall()
          print(" ")
          for gh in ku:
               print(gh)
          print(" ")
          print(" ")
          print( "functions for blend: ")
          print("sum ---- to get the cum of all the values")
          print("avg ---- to get the average of all the values")
          print("count -- to get the count of all records")
          print("min ---- to get the minimum of all the values")
          print("max ---- to get the maximum value")
          print(" ")
          xc = input("enter condition - having ")
          zx = "select * from {} having {}".format(cv,xc)
          cur.execute(zx)
          da = cur.fetchall()
          print(" ")
          for vg in da:
               print(vg)
          print(" ")
     except c.Error as asm:
          print("something went wrong: {}".format(asm))
